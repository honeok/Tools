name: PHP

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * 0' # 东八区每周日的午夜

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Fetch latest versions
        run: |
          chmod +x ldnmp/php/build_depend.sh
          bash ldnmp/php/build_depend.sh

      - name: Get Current Version
        id: get_version
        run: |
          CURRENT_PHP_VERSION=$(docker run --rm honeok/php:fpm-alpine php -v | awk '/PHP/{print $2}' | grep -oP '^\d+\.\d+\.\d+')
          ALPINE_VERSION=$(docker run --rm php:fpm-alpine sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2')
          echo "CURRENT_PHP_VERSION=${CURRENT_PHP_VERSION}" >> $GITHUB_ENV
          echo "ALPINE_VERSION=${ALPINE_VERSION}" >> $GITHUB_ENV

      - name: Compare PHP Version
        id: compare_php_versions
        run: |
          if [[ "$(echo -e "${{ env.LATEST_PHP_VERSION }}\n${{ env.CURRENT_PHP_VERSION }}" | sort -V | head -n1)" != "${{ env.LATEST_PHP_VERSION }}" ]]; then
            echo "BUILD_DOCKER_IMAGE=true" >> $GITHUB_ENV
          else
            echo "BUILD_DOCKER_IMAGE=false" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        if: env.BUILD_DOCKER_IMAGE == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ldnmp/php/Dockerfile
          push: true
          tags: |
            "honeok/php:${{ env.LATEST_PHP_VERSION }}-fpm-alpine${{ env.ALPINE_VERSION }}"
            "honeok/php:fpm-alpine"
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          build-args: |
            PHP_VERSION=${{ env.LATEST_PHP_VERSION }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
