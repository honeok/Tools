name: 'build and publish nginx'

on:
  schedule:
    - cron: '0 16 * * 0'
  workflow_dispatch:

jobs:
  build:
    name: 'build and publish nginx'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v3.6.0

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3.10.0

      - name: 'Login to DockerHub'
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 'Fetch Versions and Determine Build'
        run: |
          NGX_CVER=$(curl -Lsk "https://hub.docker.com/v2/repositories/honeok/nginx/tags" | jq -r '.results[].name' | grep -v '^alpine$' | sort -Vr | head -n1 | cut -d'-' -f1)
          NGX_LVER=$(curl -Lsk "https://api.github.com/repos/nginx/nginx/releases/latest" | jq -r '.tag_name | sub("release-"; "")')
          ZSTD_LVER=$(curl -Lsk "https://api.github.com/repos/facebook/zstd/releases/latest" | jq -r '.tag_name | sub("^v"; "")')
          NGX_TAG=$(docker run --rm nginx:alpine sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2')
          if [ -z "$NGX_CVER" ] || [ -z "$NGX_LVER" ] || [ -z "$ZSTD_LVER" ] || [ -z "$NGX_TAG" ]; then
            echo 'Error: Required parameters cannot be empty.' && exit 1
          fi
          echo "NGX_CVER=${NGX_CVER}" >> $GITHUB_ENV
          echo "NGX_LVER=${NGX_LVER}" >> $GITHUB_ENV
          echo "ZSTD_LVER=${ZSTD_LVER}" >> $GITHUB_ENV
          echo "NGX_TAG=${NGX_TAG}" >> $GITHUB_ENV
          if [[ "$(echo -e "${{ env.NGX_LVER }}\n${{ env.NGX_CVER }}" | sort -V | head -n1)" != "${{ env.NGX_LVER }}" ]]; then
            echo "BUILD_IMAGE=true" >> $GITHUB_ENV
          else
            echo "BUILD_IMAGE=false" >> $GITHUB_ENV
          fi

      - name: 'build and publish nginx'
        if: env.BUILD_IMAGE == 'true'
        uses: docker/build-push-action@v6.11.0
        with:
          context: "{{ defaultContext }}:ldnmp/nginx"
          file: Dockerfile
          push: true
          tags: |
            "${{ env.DOCKER_USERNAME }}/nginx:${{ env.NGX_LVER }}-alpine${{ env.NGX_TAG }}"
            "${{ env.DOCKER_USERNAME }}/nginx:alpine"
          platforms: linux/386, linux/amd64, linux/arm/v6, linux/arm/v7, linux/arm64/v8, linux/ppc64le, linux/riscv64, linux/s390x
          build-args: |
            NGX_LVER=${{ env.NGX_LVER }}
            ZSTD_LVER=${{ env.ZSTD_LVER }}