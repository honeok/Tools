name: build and publish nginx

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * 0'

jobs:
  build:
    runs-on: ubuntu-22.04
    name: "build nginx image"
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Fetch latest versions
        run: |
          chmod +x ldnmp/nginx/build.sh
          bash ldnmp/nginx/build.sh

      - name: Check and get version
        run: |
          CURRENT_VERSION=$(docker run --rm honeok/nginx:alpine nginx -V 2>&1 | grep 'nginx version:' | awk -F'/' '{print $2}')
          if [[ -z $CURRENT_VERSION ]]; then
              echo "ERROR: current nginx version retrieval failed!" && exit 1
          fi
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
          ALPINE_TAG=$(docker run --rm nginx:alpine sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2')
          if [[ -z $ALPINE_TAG ]]; then
              echo "ERROR: current nginx tag retrieval failed" && exit 1
          fi
          echo "ALPINE_TAG=${ALPINE_TAG}" >> $GITHUB_ENV

      - name: Compare nginx version
        run: |
          if [[ "$(echo -e "${{ env.LATEST_VERSION }}\n${{ env.CURRENT_VERSION }}" | sort -V | head -n1)" != "${{ env.LATEST_VERSION }}" ]]; then
              echo "BUILD_IMAGE=true" >> $GITHUB_ENV
          else
              echo "BUILD_IMAGE=false" >> $GITHUB_ENV
          fi

      - name: Build and push nginx image
        if: env.BUILD_IMAGE == 'true'
        uses: docker/build-push-action@v6.11.0
        with:
          context: "{{defaultContext}}:ldnmp/nginx"
          file: Dockerfile
          push: true
          tags: |
            "${{ env.DOCKER_USERNAME }}/nginx:${{ env.LATEST_VERSION }}-alpine${{ env.ALPINE_TAG }}"
            "${{ env.DOCKER_USERNAME }}/nginx:alpine"
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x
          build-args: |
            NGINX_VERSION=${{ env.LATEST_VERSION }}
            ZSTD_VERSION=${{ env.ZSTD_VERSION }}
            CORERULESET_VERSION=${{ env.CORERULESET_VERSION }}