name: Build and publish Nginx

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Fetch latest versions
        run: |
          chmod +x ldnmp/nginx/build.sh
          bash ldnmp/nginx/build.sh

      - name: Get current version
        run: |
          CURRENT_NGINX_VERSION=$(docker run --rm honeok/nginx:alpine nginx -V 2>&1 | grep 'nginx version:' | awk -F'/' '{print $2}')
          if [[ -z $CURRENT_NGINX_VERSION ]]; then
              echo "ERROR: current nginx version retrieval failed!"
              exit 1
          fi
          echo "CURRENT_NGINX_VERSION=${CURRENT_NGINX_VERSION}" >> $GITHUB_ENV
          LATEST_NGX_TAG=$(docker run --rm nginx:alpine sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2')
          if [[ -z $LATEST_NGX_TAG ]]; then
              echo "ERROR: current nginx tag retrieval failed"
              exit 1
          fi
          echo "LATEST_NGX_TAG=${LATEST_NGX_TAG}" >> $GITHUB_ENV

      - name: Compare nginx version
        run: |
          if [[ "$(echo -e "${{ env.LATEST_NGINX_VERSION }}\n${{ env.CURRENT_NGINX_VERSION }}" | sort -V | head -n1)" != "${{ env.LATEST_NGINX_VERSION }}" ]]; then
            echo "BUILD_DOCKER_IMAGE=true" >> $GITHUB_ENV
          else
            echo "BUILD_DOCKER_IMAGE=false" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        if: env.BUILD_DOCKER_IMAGE == 'true'
        uses: docker/build-push-action@v6.11.0
        with:
          context: "{{defaultContext}}:ldnmp/nginx"
          file: Dockerfile
          push: true
          tags: |
            "honeok/nginx:${{ env.LATEST_NGINX_VERSION }}-alpine${{ env.LATEST_NGX_TAG }}"
            "honeok/nginx:alpine"
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          build-args: |
            NGINX_VERSION=${{ env.LATEST_NGINX_VERSION }}
            ZSTD_VERSION=${{ env.ZSTD_VERSION }}
            CORERULESET_VERSION=${{ env.CORERULESET_VERSION }}
